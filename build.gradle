buildscript {
    ext {
        kotlinVersion = '1.2.30'
        springBootVersion = '1.5.10.RELEASE'
        axonFrameworkVersion = '3.1.2'
        jacksonVerion = '2.9.4'

        dockerPluginVer = '0.19.2'
    }
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:$dockerPluginVer"
        classpath "pl.allegro.tech.build:axion-release-plugin:1.9.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "com.palantir.docker"
apply plugin: "pl.allegro.tech.build.axion-release"



project.group = 'io.cookma'
project.version = scmVersion.version
sourceCompatibility = 1.8

jar {
    baseName = 'cookma-service'
    version = '0.1.0-SNAPSHOT'
    archiveName 'app.jar'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-security")
//    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.2.1.RELEASE'

    // Kotlin
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile('io.github.microutils:kotlin-logging:1.4.8')

    // Axon Framework
    compile group: 'org.axonframework', name: 'axon-core', version: "${axonFrameworkVersion}"
    compile group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "${axonFrameworkVersion}"
    compile group: 'org.axonframework', name: 'axon-mongo', version: "${axonFrameworkVersion}"

    // Jackson
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "${jacksonVerion}"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${jacksonVerion}"

    // Stuff
//    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'

    // compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.5.9.RELEASE'


    testCompile("junit:junit:4.12")
    testCompile group: 'org.axonframework', name: 'axon-test', version: "${axonFrameworkVersion}"
    testCompile(group: 'org.axonframework', name: 'axon-spring', version: "${axonFrameworkVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


docker {
    name "${project.group}/${jar.baseName}:${project.version}"
    tags 'latest'
    files jar.archivePath
    dockerfile file('src/main/docker/Dockerfile')
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
